/* .App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
 */


 :root {
  --primary-color: #6366f1;
  --success-color: #10b981;
  --error-color: #ef4444;
  --text-color: #1f2937;
  --background-color: #f8fafc;
  --card-background: #ffffff;
  --shadow-sm: 0 1px 3px rgba(0,0,0,0.12);
  --shadow-md: 0 4px 6px -1px rgba(0,0,0,0.1);
  --radius-md: 8px;
  --transition: all 0.2s ease-in-out;
}

body {
  margin: 0;
  font-family: 'Inter', system-ui, -apple-system, sans-serif;
  background-color: var(--background-color);
  color: var(--text-color);
}

.app {
  max-width: 1600px;
  margin: 0 auto;
  padding: 2rem;
}

.app-header {
  margin-bottom: 3rem;
  text-align: left;
}

.app-title {
  font-size: 2rem;
  font-weight: 700;
  color: var(--text-color);
  margin: 0;
}

.dashboard-container {
  margin-top: 2rem;
}

.dashboard-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: 1.5rem;
  padding: 0;
}

/* Store Card Styles */
.store-card {
  background: var(--card-background);
  border-radius: var(--radius-md);
  padding: 1.5rem;
  box-shadow: var(--shadow-md);
  transition: var(--transition);
  position: relative;
}

.store-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1);
}

.store-card-header {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 1.5rem;
}

.store-icon {
  width: 24px;
  height: 24px;
  color: var(--primary-color);
}

.store-name {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0;
}

.status-badge {
  font-size: 0.75rem;
  font-weight: 500;
  padding: 0.25rem 0.5rem;
  border-radius: 999px;
  margin-left: auto;
}

.status-badge.connected {
  background: #d1fae5;
  color: #065f46;
}

.status-badge.disconnected {
  background: #fee2e2;
  color: #991b1b;
}

.store-metrics {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.metric-item {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.75rem;
  background: var(--background-color);
  border-radius: var(--radius-md);
}

.metric-icon {
  width: 20px;
  height: 20px;
  color: var(--primary-color);
}

.metric-label {
  font-size: 0.875rem;
  color: #6b7280;
  margin: 0;
}

.metric-value {
  font-size: 1.125rem;
  font-weight: 600;
  margin: 0.25rem 0 0;
}

/* Add Store Card */
.add-store-card {
  background: var(--card-background);
  border: 2px dashed #e5e7eb;
  border-radius: var(--radius-md);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  padding: 2rem;
  cursor: pointer;
  transition: var(--transition);
}

.add-store-card:hover {
  border-color: var(--primary-color);
  background: #f0f2ff;
}

.add-icon {
  width: 32px;
  height: 32px;
  color: var(--primary-color);
}

.add-store-text {
  font-weight: 500;
  color: var(--primary-color);
  margin: 0;
}

/* Loading and Error States */
.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 50vh;
  gap: 1rem;
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 4px solid #e5e7eb;
  border-top-color: var(--primary-color);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.error-container {
  text-align: center;
  padding: 2rem;
  background: #fee2e2;
  border-radius: var(--radius-md);
  margin: 2rem auto;
  max-width: 500px;
}

.error-message {
  color: #991b1b;
  margin-bottom: 1rem;
}

.retry-button {
  background: var(--primary-color);
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: var(--transition);
}

@keyframes spin {
  to { transform: rotate(360deg); }
}